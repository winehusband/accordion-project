{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import React, \{ useEffect, useRef \} from 'react';\
import \{ gantt \} from 'dhtmlx-gantt';\
import 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\
\
const GanttChart = (\{ assets \}) => \{\
  const ganttContainer = useRef(null);\
\
  useEffect(() => \{\
    gantt.init(ganttContainer.current);\
    const formatGanttData = (assets) => \{\
      const tasks = [];\
      const links = [];\
      let taskIdCounter = 1;\
\
      assets.forEach(asset => \{\
        const parentId = taskIdCounter++;\
        tasks.push(\{ id: parentId, text: `$\{asset.asset\} ($\{asset.platform\})`, type: 'project', open: true \});\
\
        let prevTaskId = null;\
        asset.tasks.forEach(task => \{\
          const currentTaskId = taskIdCounter++;\
          tasks.push(\{\
            id: currentTaskId,\
            text: task.name,\
            start_date: task.startDate,\
            duration: task.duration,\
            parent: parentId\
          \});\
\
          if (prevTaskId) \{\
            links.push(\{\
              id: links.length + 1,\
              source: prevTaskId,\
              target: currentTaskId,\
              type: '0'\
            \});\
          \}\
\
          prevTaskId = currentTaskId;\
        \});\
      \});\
\
      return \{ data: tasks, links: links \};\
    \};\
\
    gantt.parse(formatGanttData(assets));\
  \}, [assets]);\
\
  return <div ref=\{ganttContainer\} style=\{\{ width: '100%', height: '500px' \}\}></div>;\
\};\
\
export default GanttChart;\
}